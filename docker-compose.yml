version: "3.8"
services:

    #Nginx Service
    nginx:
        container_name: nginx
        image: nginx:alpine
        build: ./docker/nginx
        command: nginx -g "daemon off;"
        restart: unless-stopped
        tty: true
        links:
            - php
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./docker/nginx/logs:/var/log/nginx
            - ./:/var/www/html
        networks:
            - app-network

    #PHP Service
    php:
        container_name: php
        image: php
        build: ./docker/php
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www/html
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        working_dir: /var/www/html
        networks:
            - app-network

    #composer Service
    composer:
        container_name: composer
        image: composer
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        command: install
        networks:
            - app-network

    #mysql Service
    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: laravel@2022
            MYSQL_DATABASE: laravel_dev
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    #phpmyadmin Service
    phpmyadmin:
        image: phpmyadmin
        container_name: phpmyadmin
        links:
            - mysql
        environment:
            PMA_HOST: mysql
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        restart: always
        ports:
            - 8085:80
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
